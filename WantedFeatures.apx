//==============================================================================//
// Basic features
//==============================================================================//
class Person{
  var name : String
  var age : int

  function toString() : String{
    return name + " is " + age + " years old!"
  }
}

//Three different options, first is null, last two are initialized
var p : Person
var p : Person = Person()
var p = Person()

//Now p has a value
p = Person()

p.name = "Harry Potter"
p.age = 42

print(p)  //Prints "Harry potter is 42 years old!"

//==============================================================================//
// Coroutines
//==============================================================================//

class EventHandler{

  function onClick(){
    print("Ayy lmao!")
  }

  coroutine handle(e : Event) : bool{
    if(e.isMouseDown()){
      yield true;

      while(!e.isMouseUp()){
        yield false;
      }

      onClick();
      return true;
    }
    else{
      return false;
    }
  }

}

var eventHandlers : EventHandler[] = getHandlers();
var event : Event = getEvent();

while(e in eventHandlers)
  if(e.handle(event))
    break;

//==============================================================================//
// Annotations
//==============================================================================//

//                            function<void>     ?
function RequireLogin(fwd : (function() : void) ){
  if(loggedIn)
    fwd();
}

@RequireLogin
function getName(){

}

//==============================================================================//
// Templates
//==============================================================================//

function getComponent<T>() : T{
  return cmp.get(T.getClass())
}

//==============================================================================//
// Automatic enforcers
//==============================================================================//

function doStuff(notnull a : ClassType){

}

//==============================================================================//
// Flow Control
//==============================================================================//

if a {

}
if(a){

}
else if b{

}
else{

}

switch a {
  case 0,1,2,3,4  : print("Niet harry potter")
  case 1          : print("Harry potter")
  default         : print("No sir.")
}

//==============================================================================//
// Cross Referencing
//==============================================================================//

//Normal cross referencing
class Node{
  var doc : Document
}
class Document{
  var root : Node
}

//Agressive cross referencing
class A {
  static var instance = A()
  static var p = B.p()
}
class B {
  static function p() : A { return C().a }
}
class C {
  var a = instance
}



//==============================================================================//
// April fools
//==============================================================================//

//keyword private and protected removed in favour of public,
//because of demands by nsa, no further information can be provided
